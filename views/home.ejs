<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
    <link
      href="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      rel="stylesheet"
    />
    <title>Home - Drive</title>
  </head>
  <body>
    <main class="p-4 bg-gray-100 dark:bg-gray-900 h-screen w-screen">
      <div class="flex justify-between items-center mb-6">
        <div>
          <h1 class="text-2xl font-bold text-gray-800 dark:text-white">My Drive</h1>
          <p class="text-sm text-gray-600 dark:text-gray-400">Welcome back, <%= (typeof user !== 'undefined' && user && user.username) ? user.username : 'User' %>!</p>
        </div>
        <div class="flex gap-3">
          <button
           onclick="showPopup()"
           class="bg-blue-500 text-white p-2 rounded-md hover:bg-blue-400">
            Upload Files
          </button>
          <a href="/logout" class="bg-red-500 text-white p-2 rounded-md hover:bg-red-400">
            Logout
          </a>
        </div>
      </div>
      <div class="backdrop-blur hidden  pop fixed top-0 left-0 h-screen flex items-center justify-center w-screen h-screen">
        <form action="/upload-file" method="post" enctype="multipart/form-data">
        <div class="flex items-center justify-center w-96">
          <label
            for="dropzone-file"
            class="flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 dark:hover:bg-gray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600"
          >
            <div class="flex flex-col items-center justify-center pt-5 pb-6">
              <svg
                class="w-8 h-8 mb-4 text-gray-500 dark:text-gray-400"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 20 16"
              >
                <path
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2"
                />
              </svg>
              <p class="mb-2 text-sm text-gray-500 dark:text-gray-400">
                <span class="font-semibold">Click to upload</span> or drag and
                drop
              </p>
              <p class="text-xs text-gray-500 dark:text-gray-400">
                SVG, PNG, JPG or GIF (MAX. 800x400px)
              </p>
            </div>
            <input id="dropzone-file" type="file" class="hidden" name="file"/>
          </label>
        </div>
        <button
        class="bg-gray-500 text-white p-2 rounded-md hover:bg-gray-600 mt-4" >Upload File</button>
      </form>
      <button
      onclick="hidePopup()"
      class="rounded-lg font-medium bg-transparent border border-blue-500 text-blue-500 px-6 py-3 mt-4 hover:bg-blue-500 hover:text-white transition duration-300 absolute top-4 right-4">
        Close
      </button>
      </div>

      <!-- Files Display Section -->
      <div class="mt-8">
        <h2 class="text-xl font-semibold text-gray-800 dark:text-white mb-4">Your Files</h2>
        <div id="filesContainer" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
          <% if (files && files.length > 0) { %>
            <% files.forEach(file => { %>
              <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-4 hover:shadow-lg transition-shadow">
                <div class="flex items-center justify-between mb-2">
                  <div class="flex items-center">
                    <div class="w-10 h-10 bg-blue-100 dark:bg-blue-900 rounded-lg flex items-center justify-center mr-3">
                      <i class="fas fa-file text-blue-600 dark:text-blue-400"></i>
                    </div>
                    <div>
                      <h3 class="font-medium text-gray-900 dark:text-white text-sm truncate" title="<%= file.name %>">
                        <%= file.name %>
                      </h3>
                      <p class="text-xs text-gray-500 dark:text-gray-400">
                        <%= (file.size / 1024).toFixed(1) %> KB
                      </p>
                    </div>
                  </div>
                  <button onclick="deleteFile('<%= encodeURIComponent(file.id) %>')" class="text-red-500 hover:text-red-700 text-sm">
                    <i class="fas fa-trash"></i>
                  </button>
                </div>
                <div class="flex gap-2">
                  <button onclick="downloadFile('<%= encodeURIComponent(file.id) %>')" class="flex-1 bg-blue-500 text-white text-xs py-1 px-2 rounded hover:bg-blue-600 transition-colors">
                    <i class="fas fa-download mr-1"></i>Download
                  </button>
                  <button onclick="viewFile('<%= file.url %>')" class="flex-1 bg-gray-500 text-white text-xs py-1 px-2 rounded hover:bg-gray-600 transition-colors">
                    <i class="fas fa-eye mr-1"></i>View
                  </button>
                </div>
                <p class="text-xs text-gray-400 mt-2">
                  <%= new Date(file.uploadedAt).toLocaleDateString() %>
                </p>
              </div>
            <% }); %>
          <% } else { %>
            <div class="col-span-full text-center py-12">
              <i class="fas fa-folder-open text-4xl text-gray-400 mb-4"></i>
              <p class="text-gray-500 dark:text-gray-400">No files uploaded yet</p>
            </div>
          <% } %>
        </div>
      </div>
    </main>
    <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>
    <script>
      function showPopup() {
        const popup = document.querySelector('.pop');
        popup.classList.remove('hidden');
      }
      
      function hidePopup() {
        const popup = document.querySelector('.pop');
        popup.classList.add('hidden');
      }

      // Handle form submission
      document.querySelector('form').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);
        const fileInput = document.getElementById('dropzone-file');
        
        if (!fileInput.files[0]) {
          alert('Please select a file');
          return;
        }

        try {
          const response = await fetch('/upload-file', {
            method: 'POST',
            body: formData
          });

          const result = await response.json();
          
          if (result.success) {
            alert('File uploaded successfully!');
            hidePopup();
            location.reload(); // Refresh to show new file
          } else {
            alert('Upload failed: ' + result.error);
          }
        } catch (error) {
          console.error('Upload error:', error);
          alert('Upload failed. Please try again.');
        }
      });

      // Download file
      function downloadFile(fileId) {
        window.open(`/download/${fileId}`, '_blank');
      }

      // View file
      function viewFile(url) {
        window.open(url, '_blank');
      }

      // Delete file
      async function deleteFile(fileId) {
        if (!confirm('Are you sure you want to delete this file?')) {
          return;
        }

        console.log('Attempting to delete file with ID:', fileId);

        try {
          const response = await fetch(`/delete/${fileId}`, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json'
            }
          });

          console.log('Delete response status:', response.status);
          
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }

          const result = await response.json();
          console.log('Delete result:', result);
          
          if (result.success) {
            alert('File deleted successfully!');
            location.reload(); // Refresh to update file list
          } else {
            alert('Delete failed: ' + result.error);
          }
        } catch (error) {
          console.error('Delete error:', error);
          alert('Delete failed: ' + error.message);
        }
      }

      // Drag and drop functionality
      const dropzone = document.querySelector('label[for="dropzone-file"]');
      
      dropzone.addEventListener('dragover', (e) => {
        e.preventDefault();
        dropzone.classList.add('border-blue-400', 'bg-blue-50');
      });

      dropzone.addEventListener('dragleave', (e) => {
        e.preventDefault();
        dropzone.classList.remove('border-blue-400', 'bg-blue-50');
      });

      dropzone.addEventListener('drop', (e) => {
        e.preventDefault();
        dropzone.classList.remove('border-blue-400', 'bg-blue-50');
        
        const files = e.dataTransfer.files;
        if (files.length > 0) {
          document.getElementById('dropzone-file').files = files;
        }
      });
    </script>
  </body>
</html>
